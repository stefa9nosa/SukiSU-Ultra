# The proguard configuration file for the following section is /home/runner/work/SukiSU-Ultra/SukiSU-Ultra/manager/app/build/intermediates/aapt_proguard_file/release/processReleaseResources/aapt_rules.txt
-keep class androidx.compose.ui.tooling.PreviewActivity { <init>(); }
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
-keep class androidx.core.content.FileProvider { <init>(); }
-keep class androidx.profileinstaller.ProfileInstallReceiver { <init>(); }
-keep class androidx.startup.InitializationProvider { <init>(); }
-keep class com.sukisu.ultra.KernelSUApplication { <init>(); }
-keep class com.sukisu.ultra.ui.MainActivity { <init>(); }
-keep class com.sukisu.ultra.ui.webui.WebUIActivity { <init>(); }
-keep class com.sukisu.ultra.ui.webui.WebUIXActivity { <init>(); }
-keep class android.widget.Space { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContainer { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarContextView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActionMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.DialogTitle { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.Toolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.appcompat.widget.ViewStubCompat { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.browser.browseractions.BrowserActionsFallbackMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.helper.widget.Flow { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.core.widget.NestedScrollView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.fragment.app.FragmentContainerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class androidx.recyclerview.widget.RecyclerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.appbar.MaterialToolbar { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.button.MaterialButtonToggleGroup { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.chip.Chip { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.datepicker.MaterialCalendarGridView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.BaselineLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.CheckableImageButton { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.ClippableRoundedCornerLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuItemView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.NavigationMenuView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.internal.TouchObserverFrameLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.Snackbar$SnackbarLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.snackbar.SnackbarContentLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputEditText { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.textfield.TextInputLayout { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ChipTextInputComboView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockFaceView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.ClockHandView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class com.google.android.material.timepicker.TimePickerView { <init>(android.content.Context, android.util.AttributeSet); }

-keep class me.zhanghai.android.appiconloader.iconloaderlib.FixedScaleDrawable { <init>(...); }


# End of content from /home/runner/work/SukiSU-Ultra/SukiSU-Ultra/manager/app/build/intermediates/aapt_proguard_file/release/processReleaseResources/aapt_rules.txt
# The proguard configuration file for the following section is /home/runner/work/SukiSU-Ultra/SukiSU-Ultra/manager/app/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.10.1
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# Starting with version 2.2 of the Android plugin for Gradle, this file is distributed together with
# the plugin and unpacked at build-time. The files in $ANDROID_HOME are no longer maintained and
# will be ignored by new version of the Android plugin for Gradle.

# Optimizations: If you don't want to optimize, use the proguard-android.txt configuration file
# instead of this one, which turns off the optimization flags.
-allowaccessmodification

# Preserve some attributes that may be required for reflection.
-keepattributes AnnotationDefault,
                EnclosingMethod,
                InnerClasses,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations,
                Signature

-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService
-keep public class com.google.android.vending.licensing.ILicensingService
-dontnote com.android.vending.licensing.ILicensingService
-dontnote com.google.vending.licensing.ILicensingService
-dontnote com.google.android.vending.licensing.ILicensingService

# For native methods, see https://www.guardsquare.com/manual/configuration/examples#native
-keepclasseswithmembernames,includedescriptorclasses class * {
    native <methods>;
}

# Keep setters in Views so that animations can still work.
-keepclassmembers public class * extends android.view.View {
    void set*(***);
    *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick.
-keepclassmembers class * extends android.app.Activity {
    public void *(android.view.View);
}

# For enumeration classes, see https://www.guardsquare.com/manual/configuration/examples#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
    public static final ** CREATOR;
}

# Preserve annotated Javascript interface methods.
-keepclassmembers class * {
    @android.webkit.JavascriptInterface <methods>;
}

# The support libraries contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version. We know about them, and they are safe.
-dontnote android.support.**
-dontnote androidx.**
-dontwarn android.support.**
-dontwarn androidx.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# These classes are duplicated between android.jar and org.apache.http.legacy.jar.
-dontnote org.apache.http.**
-dontnote android.net.http.**

# These classes are duplicated between android.jar and core-lambda-stubs.jar.
-dontnote java.lang.invoke.**

# End of content from /home/runner/work/SukiSU-Ultra/SukiSU-Ultra/manager/app/build/intermediates/default_proguard_files/global/proguard-android-optimize.txt-8.10.1
# The proguard configuration file for the following section is /home/runner/work/SukiSU-Ultra/SukiSU-Ultra/manager/app/proguard-rules.pro
-verbose
-optimizationpasses 5

-dontwarn org.conscrypt.**
-dontwarn kotlinx.serialization.**

# Please add these rules to your existing keep rules in order to suppress warnings.
# This is generated automatically by the Android Gradle plugin.
-dontwarn com.google.auto.service.AutoService
-dontwarn com.google.j2objc.annotations.RetainedWith
-dontwarn javax.lang.model.SourceVersion
-dontwarn javax.lang.model.element.AnnotationMirror
-dontwarn javax.lang.model.element.AnnotationValue
-dontwarn javax.lang.model.element.Element
-dontwarn javax.lang.model.element.ElementKind
-dontwarn javax.lang.model.element.ElementVisitor
-dontwarn javax.lang.model.element.ExecutableElement
-dontwarn javax.lang.model.element.Modifier
-dontwarn javax.lang.model.element.Name
-dontwarn javax.lang.model.element.PackageElement
-dontwarn javax.lang.model.element.TypeElement
-dontwarn javax.lang.model.element.TypeParameterElement
-dontwarn javax.lang.model.element.VariableElement
-dontwarn javax.lang.model.type.ArrayType
-dontwarn javax.lang.model.type.DeclaredType
-dontwarn javax.lang.model.type.ExecutableType
-dontwarn javax.lang.model.type.TypeKind
-dontwarn javax.lang.model.type.TypeMirror
-dontwarn javax.lang.model.type.TypeVariable
-dontwarn javax.lang.model.type.TypeVisitor
-dontwarn javax.lang.model.util.AbstractAnnotationValueVisitor8
-dontwarn javax.lang.model.util.AbstractTypeVisitor8
-dontwarn javax.lang.model.util.ElementFilter
-dontwarn javax.lang.model.util.Elements
-dontwarn javax.lang.model.util.SimpleElementVisitor8
-dontwarn javax.lang.model.util.SimpleTypeVisitor7
-dontwarn javax.lang.model.util.SimpleTypeVisitor8
-dontwarn javax.lang.model.util.Types
-dontwarn javax.tools.Diagnostic$Kind


# MMRL:webui reflection
-keep class com.dergoogler.mmrl.webui.model.ModId { *; }
-keep class com.dergoogler.mmrl.webui.interfaces.** { *; }
-keep class com.sukisu.ultra.ui.webui.WebViewInterface { *; }

-keep,allowobfuscation class * extends com.dergoogler.mmrl.platform.content.IService { *; }
# End of content from /home/runner/work/SukiSU-Ultra/SukiSU-Ultra/manager/app/proguard-rules.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/3eac5ad19d9bcf2ef00ec219a710573a/transformed/webui-2bb00b3c2b/proguard.txt
# Tell consumers to keep all classes that extend WXInterface
-keep class * extends com.dergoogler.mmrl.webui.interfaces.WXInterface {
    <init>(...);
    *;
}

-keep class com.dergoogler.mmrl.webui.interfaces.**
-keep class * extends com.dergoogler.mmrl.webui.interfaces.WXInterface
-if class com.dergoogler.mmrl.webui.interfaces.Manager
-keepnames class com.dergoogler.mmrl.webui.interfaces.Manager
-if class com.dergoogler.mmrl.webui.interfaces.Manager
-keep class com.dergoogler.mmrl.webui.interfaces.ManagerJsonAdapter {
    public <init>(com.squareup.moshi.Moshi);
}

-if class com.dergoogler.mmrl.webui.model.Manager
-keepnames class com.dergoogler.mmrl.webui.model.Manager
-if class com.dergoogler.mmrl.webui.model.Manager
-keep class com.dergoogler.mmrl.webui.model.ManagerJsonAdapter {
    public <init>(com.squareup.moshi.Moshi);
}

-if class com.dergoogler.mmrl.webui.model.UMUserInfo
-keepnames class com.dergoogler.mmrl.webui.model.UMUserInfo
-if class com.dergoogler.mmrl.webui.model.UMUserInfo
-keep class com.dergoogler.mmrl.webui.model.UMUserInfoJsonAdapter {
    public <init>(com.squareup.moshi.Moshi);
}

-if class com.dergoogler.mmrl.webui.model.WebUIConfig
-keepnames class com.dergoogler.mmrl.webui.model.WebUIConfig
-if class com.dergoogler.mmrl.webui.model.WebUIConfig
-keep class com.dergoogler.mmrl.webui.model.WebUIConfigJsonAdapter {
    public <init>(com.squareup.moshi.Moshi);
}
-if class com.dergoogler.mmrl.webui.model.WebUIConfig
-keepnames class kotlin.jvm.internal.DefaultConstructorMarker
-if class com.dergoogler.mmrl.webui.model.WebUIConfig
-keepclassmembers class com.dergoogler.mmrl.webui.model.WebUIConfig {
    public synthetic <init>(com.dergoogler.mmrl.webui.model.WebUIConfigRequire,java.util.List,boolean,java.lang.String,java.lang.String,boolean,boolean,boolean,java.lang.String,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker);
}

-if class com.dergoogler.mmrl.webui.model.WebUIConfigDexFile
-keepnames class com.dergoogler.mmrl.webui.model.WebUIConfigDexFile
-if class com.dergoogler.mmrl.webui.model.WebUIConfigDexFile
-keep class com.dergoogler.mmrl.webui.model.WebUIConfigDexFileJsonAdapter {
    public <init>(com.squareup.moshi.Moshi);
}
-if class com.dergoogler.mmrl.webui.model.WebUIConfigDexFile
-keepnames class kotlin.jvm.internal.DefaultConstructorMarker
-if class com.dergoogler.mmrl.webui.model.WebUIConfigDexFile
-keepclassmembers class com.dergoogler.mmrl.webui.model.WebUIConfigDexFile {
    public synthetic <init>(java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker);
}

-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequire
-keepnames class com.dergoogler.mmrl.webui.model.WebUIConfigRequire
-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequire
-keep class com.dergoogler.mmrl.webui.model.WebUIConfigRequireJsonAdapter {
    public <init>(com.squareup.moshi.Moshi);
}
-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequire
-keepnames class kotlin.jvm.internal.DefaultConstructorMarker
-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequire
-keepclassmembers class com.dergoogler.mmrl.webui.model.WebUIConfigRequire {
    public synthetic <init>(java.util.List,com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersion,int,kotlin.jvm.internal.DefaultConstructorMarker);
}

-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersion
-keepnames class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersion
-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersion
-keep class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersionJsonAdapter {
    public <init>(com.squareup.moshi.Moshi);
}
-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersion
-keepnames class kotlin.jvm.internal.DefaultConstructorMarker
-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersion
-keepclassmembers class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersion {
    public synthetic <init>(int,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker);
}

-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersionPackages
-keepnames class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersionPackages
-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersionPackages
-keep class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersionPackagesJsonAdapter {
    public <init>(com.squareup.moshi.Moshi);
}
-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersionPackages
-keepnames class kotlin.jvm.internal.DefaultConstructorMarker
-if class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersionPackages
-keepclassmembers class com.dergoogler.mmrl.webui.model.WebUIConfigRequireVersionPackages {
    public synthetic <init>(int,java.lang.Object,java.lang.String,java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/3eac5ad19d9bcf2ef00ec219a710573a/transformed/webui-2bb00b3c2b/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/d9719c08324b31d131d9b1e75fd02671/transformed/ui-2bb00b3c2b/proguard.txt

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/d9719c08324b31d131d9b1e75fd02671/transformed/ui-2bb00b3c2b/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/2b09781461c642fb0dd946f40572fa7d/transformed/core-2.1.0/proguard.txt

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/2b09781461c642fb0dd946f40572fa7d/transformed/core-2.1.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/c534fc7fa23b2301fe769051f5f9708b/transformed/platform-2bb00b3c2b/proguard.txt

-if class com.dergoogler.mmrl.platform.model.ModuleConfig
-keepnames class com.dergoogler.mmrl.platform.model.ModuleConfig
-if class com.dergoogler.mmrl.platform.model.ModuleConfig
-keep class com.dergoogler.mmrl.platform.model.ModuleConfigJsonAdapter {
    public <init>(com.squareup.moshi.Moshi);
}
-if class com.dergoogler.mmrl.platform.model.ModuleConfig
-keepnames class kotlin.jvm.internal.DefaultConstructorMarker
-if class com.dergoogler.mmrl.platform.model.ModuleConfig
-keepclassmembers class com.dergoogler.mmrl.platform.model.ModuleConfig {
    public synthetic <init>(java.lang.Object,java.lang.Object,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/c534fc7fa23b2301fe769051f5f9708b/transformed/platform-2bb00b3c2b/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/550453bffa0b1baec9c5bfb2481ef062/transformed/ext-2bb00b3c2b/proguard.txt

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/550453bffa0b1baec9c5bfb2481ef062/transformed/ext-2bb00b3c2b/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/576cd733675adb10357c1d34525552af/transformed/navigation-runtime-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/576cd733675adb10357c1d34525552af/transformed/navigation-runtime-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/46b86185612ee880004d4eaa280f1c46/transformed/navigation-common-release/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NavArgsLazy creates NavArgs instances using reflection
-if public class ** implements androidx.navigation.NavArgs
-keepclassmembers public class <1> {
    ** fromBundle(android.os.Bundle);
}

# Retain the @Navigator.Name annotation on each subclass of Navigator.
# R8 full mode only retains annotations on items matched by a -keep rule,
# hence the extra -keep rule for the subclasses of Navigator.
#
# A -keep rule for the Navigator.Name annotation class is not required
# since the annotation is referenced from the code.
-keepattributes RuntimeVisibleAnnotations
-keep,allowobfuscation,allowshrinking class * extends androidx.navigation.Navigator

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/46b86185612ee880004d4eaa280f1c46/transformed/navigation-common-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/c990a670b3190e1de16fd2326eeb9af0/transformed/navigation-compose-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/c990a670b3190e1de16fd2326eeb9af0/transformed/navigation-compose-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/fff258b7b37bf1244d35bb4656b09466/transformed/material-ripple-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/fff258b7b37bf1244d35bb4656b09466/transformed/material-ripple-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/bfd0395ac4f2f659548daf5d33802eae/transformed/animation-core-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/bfd0395ac4f2f659548daf5d33802eae/transformed/animation-core-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/6d18d9fb89ec83a4f243619a62ad7a85/transformed/animation-graphics-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/6d18d9fb89ec83a4f243619a62ad7a85/transformed/animation-graphics-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/937c5c30c23cd3449d1daf06fabfd72d/transformed/animation-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/937c5c30c23cd3449d1daf06fabfd72d/transformed/animation-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/deab538533ce4e87f06d6818a278f0a6/transformed/foundation-layout-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/deab538533ce4e87f06d6818a278f0a6/transformed/foundation-layout-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/2df0be221ec132f050275894633e52d3/transformed/foundation-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
}


# End of content from /home/runner/.gradle/caches/8.12.1/transforms/2df0be221ec132f050275894633e52d3/transformed/foundation-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/eaa778615d93bccfea2c3daefc4c75b9/transformed/ui-tooling-data-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/eaa778615d93bccfea2c3daefc4c75b9/transformed/ui-tooling-data-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/f233a893911f70203a3a95a2363607e3/transformed/ui-unit-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/f233a893911f70203a3a95a2363607e3/transformed/ui-unit-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/2b32d23adcc9022edf1f6552b2ac0acf/transformed/ui-graphics-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/2b32d23adcc9022edf1f6552b2ac0acf/transformed/ui-graphics-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/b1ee50538498bbe05972527feb3a7aab/transformed/ui-geometry-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/b1ee50538498bbe05972527feb3a7aab/transformed/ui-geometry-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/71de49517808ecaaa5769f658e9ed64b/transformed/ui-util-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/71de49517808ecaaa5769f658e9ed64b/transformed/ui-util-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/17019202c2a9819bb970b06f3d980941/transformed/ui-text-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/17019202c2a9819bb970b06f3d980941/transformed/ui-text-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/706d107c7c2aa37be2e451aa455bf7ff/transformed/ui-tooling-preview-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/706d107c7c2aa37be2e451aa455bf7ff/transformed/ui-tooling-preview-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/dfc0f00b624f1f405a92dc7f71e52ee6/transformed/ui-tooling-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/dfc0f00b624f1f405a92dc7f71e52ee6/transformed/ui-tooling-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/b678992dbb8229b80f540f768764c93d/transformed/material-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/b678992dbb8229b80f540f768764c93d/transformed/material-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/0edd71e902e754d67dea7c6821da9688/transformed/material-1.12.0/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from /home/runner/.gradle/caches/8.12.1/transforms/0edd71e902e754d67dea7c6821da9688/transformed/material-1.12.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/428195011819a6da610d5df9a8f0a126/transformed/appiconloader-coil-1.5.0/proguard.txt
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/428195011819a6da610d5df9a8f0a126/transformed/appiconloader-coil-1.5.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/0aa64b21efe08d6aa56089416f9ab720/transformed/appcompat-1.7.0/proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/0aa64b21efe08d6aa56089416f9ab720/transformed/appcompat-1.7.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/e9b9c1de8434db8ce68b4ab4d3ca0c54/transformed/fragment-1.5.4/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/e9b9c1de8434db8ce68b4ab4d3ca0c54/transformed/fragment-1.5.4/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/09d092a8b2210630759923ed7319858b/transformed/transition-1.5.0/proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/09d092a8b2210630759923ed7319858b/transformed/transition-1.5.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/a9b98b4baf40bd2af625c67739679f1d/transformed/documentfile-1.1.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/a9b98b4baf40bd2af625c67739679f1d/transformed/documentfile-1.1.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/4a243b0a4f26fd8e5721d8b2f92d3685/transformed/webkit-1.13.0/proguard.txt
# Copyright 2018 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# We need to avoid obfuscating the support library boundary interface because
# this API is shared with the Android Support Library.
# Note that we only 'keep' the package org.chromium.support_lib_boundary itself,
# any sub-packages of that package can still be obfuscated.
-keep public class org.chromium.support_lib_boundary.* { public *; }

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Prevent WebViewClientCompat from being renamed, since chromium depends on this name.
-keepnames public class androidx.webkit.WebViewClientCompat

# Prevent ProcessGlobalConfig and member sProcessGlobalConfig from being renamed, since chromium
# depends on this name.
-keepnames public class androidx.webkit.ProcessGlobalConfig {
    private static final *** sProcessGlobalConfig;
}
# End of content from /home/runner/.gradle/caches/8.12.1/transforms/4a243b0a4f26fd8e5721d8b2f92d3685/transformed/webkit-1.13.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/4d673c0e503b28e405e8c64b2da47f00/transformed/savedstate-ktx-1.3.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/4d673c0e503b28e405e8c64b2da47f00/transformed/savedstate-ktx-1.3.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/48cd8ff198d598c28b29512a8139f147/transformed/savedstate-compose-release/proguard.txt
# Workaround for https://issuetracker.google.com/issues/346808608
#
# `androidx.savedstate.compose.LocalSavedStateRegistryOwner` will reflectively lookup for
# `androidx.compose.ui.platform.LocalSavedStateRegistryOwner` to ensure backward compatibility
# when using SavedState >= 1.3 with Compose <= 1.7.
#
# We need to keep the getter if the code using this is included.
#
# We need to suppress `ShrinkerUnresolvedReference` because the `LocalComposition` is in a
# different module.
#
#noinspection ShrinkerUnresolvedReference
-if public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalSavedStateRegistryOwner();
}
-keep public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalSavedStateRegistryOwner();
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/48cd8ff198d598c28b29512a8139f147/transformed/savedstate-compose-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/82b8a423f0c0ff88f249c2a9624b6dc2/transformed/lifecycle-process-2.9.0/proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from /home/runner/.gradle/caches/8.12.1/transforms/82b8a423f0c0ff88f249c2a9624b6dc2/transformed/lifecycle-process-2.9.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/bf8ae6ad562324e8b21d1b7aca24895d/transformed/lifecycle-livedata-core-2.9.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/bf8ae6ad562324e8b21d1b7aca24895d/transformed/lifecycle-livedata-core-2.9.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/70af4a695fff03a7c0200ffa64c4f9e8/transformed/lifecycle-viewmodel-savedstate-release/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/70af4a695fff03a7c0200ffa64c4f9e8/transformed/lifecycle-viewmodel-savedstate-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/8708acfb190c6817ad23f73e085f45a4/transformed/savedstate-release/proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/8708acfb190c6817ad23f73e085f45a4/transformed/savedstate-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/b21b187d272c379472de406ae2bfa9c1/transformed/coordinatorlayout-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/b21b187d272c379472de406ae2bfa9c1/transformed/coordinatorlayout-1.1.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/8ef435499ee23c0b05135470837c59f8/transformed/vectordrawable-animated-1.1.0/proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/8ef435499ee23c0b05135470837c59f8/transformed/vectordrawable-animated-1.1.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/6b5afaa7e1a1b682b438ec0ac01fe3c7/transformed/recyclerview-1.1.0/proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from /home/runner/.gradle/caches/8.12.1/transforms/6b5afaa7e1a1b682b438ec0ac01fe3c7/transformed/recyclerview-1.1.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/9af082345133ce9d482e87fbe703af45/transformed/graphics-path-1.0.1/proguard.txt
-keepclasseswithmembers class androidx.graphics.path.** {
    native <methods>;
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/9af082345133ce9d482e87fbe703af45/transformed/graphics-path-1.0.1/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/a8369140380cfcd85befc58643d312fd/transformed/core-1.15.0/proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/a8369140380cfcd85befc58643d312fd/transformed/core-1.15.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/61b48f898637a8e53600b246d20edeaa/transformed/lifecycle-runtime-release/proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# The deprecated `android.app.Fragment` creates `Fragment` instances using reflection.
# See: b/338958225, b/341537875
-keepclasseswithmembers,allowobfuscation public class androidx.lifecycle.ReportFragment {
    public <init>();
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/61b48f898637a8e53600b246d20edeaa/transformed/lifecycle-runtime-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/b4612886f96216086a4ba992b2c0f12e/transformed/lifecycle-livedata-core-ktx-2.9.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/b4612886f96216086a4ba992b2c0f12e/transformed/lifecycle-livedata-core-ktx-2.9.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/591d6dba1f083dc3c1e4864aefdbd600/transformed/lifecycle-livedata-2.9.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/591d6dba1f083dc3c1e4864aefdbd600/transformed/lifecycle-livedata-2.9.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/6f3c188917d47d10a7d94357e60430fc/transformed/lifecycle-viewmodel-release/proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/6f3c188917d47d10a7d94357e60430fc/transformed/lifecycle-viewmodel-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/4412763af9a9b498573a0d805ab12fff/transformed/rules/lib/META-INF/proguard/androidx-lifecycle-lifecycle-common-java8.pro
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/4412763af9a9b498573a0d805ab12fff/transformed/rules/lib/META-INF/proguard/androidx-lifecycle-lifecycle-common-java8.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/a20ef3186ca0cf77bdc6808718f6fe27/transformed/lifecycle-viewmodel-ktx-2.9.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/a20ef3186ca0cf77bdc6808718f6fe27/transformed/lifecycle-viewmodel-ktx-2.9.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/118df7c3435f3ad479df20d07ae57da9/transformed/lifecycle-service-2.9.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/118df7c3435f3ad479df20d07ae57da9/transformed/lifecycle-service-2.9.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/2452b986b98bd7fda0ffa5c3d1c87b2d/transformed/lifecycle-livedata-ktx-2.9.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/2452b986b98bd7fda0ffa5c3d1c87b2d/transformed/lifecycle-livedata-ktx-2.9.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/10900260ce775e9dc13a83f5c74bd7f6/transformed/lifecycle-runtime-compose-release/proguard.txt
# Workaround for https://issuetracker.google.com/issues/346808608
#
# `androidx.lifecycle.compose.LocalLifecycleOwner` will reflectively lookup for
# `androidx.compose.ui.platform.LocalLifecycleOwner` to ensure backward compatibility
# when using Lifecycle 2.8+ with Compose 1.6.
#
# We need to keep the getter if the code using this is included.
#
# We need to suppress `ShrinkerUnresolvedReference` because the `LocalComposition` is in a
# different module.
#
#noinspection ShrinkerUnresolvedReference
-if public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}
-keep public class androidx.compose.ui.platform.AndroidCompositionLocals_androidKt {
    public static *** getLocalLifecycleOwner();
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/10900260ce775e9dc13a83f5c74bd7f6/transformed/lifecycle-runtime-compose-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/512e291f3b94f2268a970c7173d3ff70/transformed/lifecycle-viewmodel-compose-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/512e291f3b94f2268a970c7173d3ff70/transformed/lifecycle-viewmodel-compose-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/5ed8a2f6642fefa51d6caf704396a882/transformed/ui-release/proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# We supply these as stubs and are able to link to them at runtime
# because they are hidden public classes in Android. We don't want
# R8 to complain about them not being there during optimization.
-dontwarn android.view.RenderNode
-dontwarn android.view.DisplayListCanvas
-dontwarn android.view.HardwareCanvas

-keepclassmembers class androidx.compose.ui.platform.ViewLayerContainer {
    protected void dispatchGetDisplayList();
}

-keepclassmembers class androidx.compose.ui.platform.AndroidComposeView {
    android.view.View findViewByAccessibilityIdTraversal(int);
}

# Users can create Modifier.Node instances that implement multiple Modifier.Node interfaces,
# so we cannot tell whether two modifier.node instances are of the same type without using
# reflection to determine the class type. See b/265188224 for more context.
-keep,allowshrinking class * extends androidx.compose.ui.node.ModifierNodeElement

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.**.* {
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    # For methods returning Nothing
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);
    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);
}

# When pointer input modifier nodes are added dynamically and have the same keys (common when
# developers `Unit` for their keys), we need a way to differentiate them and using a
# functional interface and comparing classes allows us to do that.
-keepnames class androidx.compose.ui.input.pointer.PointerInputEventHandler {
    *;
}


# End of content from /home/runner/.gradle/caches/8.12.1/transforms/5ed8a2f6642fefa51d6caf704396a882/transformed/ui-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/d3cabd70ec2d03ba6b0dbf6c3632a073/transformed/runtime-saveable-release/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/d3cabd70ec2d03ba6b0dbf6c3632a073/transformed/runtime-saveable-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/c3c55018ba70af078f5d010cc4293bfd/transformed/runtime-release/proguard.txt
-assumenosideeffects public class androidx.compose.runtime.ComposerKt {
    void sourceInformation(androidx.compose.runtime.Composer,java.lang.String);
    void sourceInformationMarkerStart(androidx.compose.runtime.Composer,int,java.lang.String);
    void sourceInformationMarkerEnd(androidx.compose.runtime.Composer);
}

# Composer's class initializer doesn't do anything but create an EMPTY object. Marking the
# initializers as having no side effects can help encourage shrinkers to merge/devirtualize Composer
# with ComposerImpl.
-assumenosideeffects public class androidx.compose.runtime.Composer {
    void <clinit>();
}
-assumenosideeffects public class androidx.compose.runtime.ComposerImpl {
    void <clinit>();
}

# Keep all the functions created to throw an exception. We don't want these functions to be
# inlined in any way, which R8 will do by default. The whole point of these functions is to
# reduce the amount of code generated at the call site.
-keepclassmembers,allowshrinking,allowobfuscation class androidx.compose.runtime.** {
    # java.lang.Void == methods that return Nothing
    static void throw*Exception(...);
    static void throw*ExceptionForNullCheck(...);
    static java.lang.Void throw*Exception(...);
    static java.lang.Void throw*ExceptionForNullCheck(...);

    # For functions generating error messages
    static java.lang.String exceptionMessage*(...);
    java.lang.String exceptionMessage*(...);

    static void compose*RuntimeError(...);
    static java.lang.Void compose*RuntimeError(...);
}


# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/c3c55018ba70af078f5d010cc4293bfd/transformed/runtime-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/a8c816af843360e9ae3fa01ab847c0b9/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# Allow R8 to optimize away the FastServiceLoader.
# Together with ServiceLoader optimization in R8
# this results in direct instantiation when loading Dispatchers.Main
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatcherLoader {
    boolean FAST_SERVICE_LOADER_ENABLED return false;
}

-assumenosideeffects class kotlinx.coroutines.internal.FastServiceLoaderKt {
    boolean ANDROID_DETECTED return true;
}

# Disable support for "Missing Main Dispatcher", since we always have Android main dispatcher
-assumenosideeffects class kotlinx.coroutines.internal.MainDispatchersKt {
    boolean SUPPORT_MISSING return false;
}

# Statically turn off all debugging facilities and assertions
-assumenosideeffects class kotlinx.coroutines.DebugKt {
    boolean getASSERTIONS_ENABLED() return false;
    boolean getDEBUG() return false;
    boolean getRECOVER_STACK_TRACES() return false;
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/a8c816af843360e9ae3fa01ab847c0b9/transformed/rules/lib/META-INF/com.android.tools/r8-from-1.6.0/coroutines.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/7f42da82d98a0de317dd197db0f46c56/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/proguard/coroutines.pro
# - META-INF/com.android.tools/proguard/coroutines.pro

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.internal.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement
# End of content from /home/runner/.gradle/caches/8.12.1/transforms/7f42da82d98a0de317dd197db0f46c56/transformed/rules/lib/META-INF/com.android.tools/r8/coroutines.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/cecdf6e3793bdf7bcec093deb1b0d489/transformed/appiconloader-1.5.0/proguard.txt
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/cecdf6e3793bdf7bcec093deb1b0d489/transformed/appiconloader-1.5.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/75bfee75aff3a745b4e97833f07d39a9/transformed/appiconloader-iconloaderlib-1.5.0/proguard.txt
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/75bfee75aff3a745b4e97833f07d39a9/transformed/appiconloader-iconloaderlib-1.5.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/bcfb051d9b9239b66f1800bb9f31b793/transformed/versionedparcelable-1.1.1/proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/bcfb051d9b9239b66f1800bb9f31b793/transformed/versionedparcelable-1.1.1/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/64da05bdabf09999b271dd06861dc06c/transformed/rules/lib/META-INF/proguard/androidx-collection-collection-ktx.pro
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/64da05bdabf09999b271dd06861dc06c/transformed/rules/lib/META-INF/proguard/androidx-collection-collection-ktx.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/170c2cddadabe80da6be11b42aecd1ec/transformed/startup-runtime-1.1.1/proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/170c2cddadabe80da6be11b42aecd1ec/transformed/startup-runtime-1.1.1/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/2eeaa72bfa8db64274fc2f72d18beb59/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/2eeaa72bfa8db64274fc2f72d18beb59/transformed/rules/lib/META-INF/proguard/androidx-annotations.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/cadd63bd398dbef3d4c90a4e43b885d1/transformed/core-viewtree-1.0.0/proguard.txt
# Intentionally empty proguard rules to indicate this library is safe to shrink

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/cadd63bd398dbef3d4c90a4e43b885d1/transformed/core-viewtree-1.0.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/73e5700ab4fc0eb5a7ea4cc164eb7df5/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-r8.pro
# Rule to save runtime annotations on serializable class.
# If the R8 full mode is used, annotations are removed from classes-files.
#
# For the annotation serializer, it is necessary to read the `Serializable` annotation inside the serializer<T>() function - if it is present,
# then `SealedClassSerializer` is used, if absent, then `PolymorphicSerializer'.
#
# When using R8 full mode, all interfaces will be serialized using `PolymorphicSerializer`.
#
# see https://github.com/Kotlin/kotlinx.serialization/issues/2050

 -if @kotlinx.serialization.Serializable class **
 -keep, allowshrinking, allowoptimization, allowobfuscation, allowaccessmodification class <1>

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/73e5700ab4fc0eb5a7ea4cc164eb7df5/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-r8.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/73e5700ab4fc0eb5a7ea4cc164eb7df5/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-common.pro
# Keep `Companion` object fields of serializable classes.
# This avoids serializer lookup through `getDeclaredClasses` as done for named companion objects.
-if @kotlinx.serialization.Serializable class **
-keepclassmembers class <1> {
    static <1>$Companion Companion;
}

# Keep `serializer()` on companion objects (both default and named) of serializable classes.
-if @kotlinx.serialization.Serializable class ** {
    static **$* *;
}
-keepclassmembers class <2>$<3> {
    kotlinx.serialization.KSerializer serializer(...);
}

# Keep `INSTANCE.serializer()` of serializable objects.
-if @kotlinx.serialization.Serializable class ** {
    public static ** INSTANCE;
}
-keepclassmembers class <1> {
    public static <1> INSTANCE;
    kotlinx.serialization.KSerializer serializer(...);
}

# @Serializable and @Polymorphic are used at runtime for polymorphic serialization.
-keepattributes RuntimeVisibleAnnotations,AnnotationDefault

# Don't print notes about potential mistakes or omissions in the configuration for kotlinx-serialization classes
# See also https://github.com/Kotlin/kotlinx.serialization/issues/1900
-dontnote kotlinx.serialization.**

# Serialization core uses `java.lang.ClassValue` for caching inside these specified classes.
# If there is no `java.lang.ClassValue` (for example, in Android), then R8/ProGuard will print a warning.
# However, since in this case they will not be used, we can disable these warnings
-dontwarn kotlinx.serialization.internal.ClassValueReferences

# disable optimisation for descriptor field because in some versions of ProGuard, optimization generates incorrect bytecode that causes a verification error
# see https://github.com/Kotlin/kotlinx.serialization/issues/2719
-keepclassmembers public class **$$serializer {
    private ** descriptor;
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/73e5700ab4fc0eb5a7ea4cc164eb7df5/transformed/rules/lib/META-INF/com.android.tools/r8/kotlinx-serialization-common.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/34fb30e106503ef616060d175b1162b2/transformed/rules/lib/META-INF/proguard/moshi.pro
# JSR 305 annotations are for embedding nullability information.
-dontwarn javax.annotation.**

-keepclasseswithmembers class * {
    @com.squareup.moshi.* <methods>;
}

-keep @com.squareup.moshi.JsonQualifier @interface *

# Enum field names are used by the integrated EnumJsonAdapter.
# values() is synthesized by the Kotlin compiler and is used by EnumJsonAdapter indirectly
# Annotate enums with @JsonClass(generateAdapter = false) to use them with Moshi.
-keepclassmembers @com.squareup.moshi.JsonClass class * extends java.lang.Enum {
    <fields>;
    **[] values();
}

# Keep helper method to avoid R8 optimisation that would keep all Kotlin Metadata when unwanted
-keepclassmembers class com.squareup.moshi.internal.Util {
    private static java.lang.String getKotlinMetadataClassName();
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/34fb30e106503ef616060d175b1162b2/transformed/rules/lib/META-INF/proguard/moshi.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/5dd8c55633678d7c2ac4fc4b677f5f2f/transformed/rules/lib/META-INF/proguard/retrofit2.pro
# Retrofit does reflection on generic parameters. InnerClasses is required to use Signature and
# EnclosingMethod is required to use InnerClasses.
-keepattributes Signature, InnerClasses, EnclosingMethod

# Retrofit does reflection on method and parameter annotations.
-keepattributes RuntimeVisibleAnnotations, RuntimeVisibleParameterAnnotations

# Keep annotation default values (e.g., retrofit2.http.Field.encoded).
-keepattributes AnnotationDefault

# Retain service method parameters when optimizing.
-keepclassmembers,allowshrinking,allowobfuscation interface * {
    @retrofit2.http.* <methods>;
}

# Ignore annotation used for build tooling.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# Ignore JSR 305 annotations for embedding nullability information.
-dontwarn javax.annotation.**

# Guarded by a NoClassDefFoundError try/catch and only used when on the classpath.
-dontwarn kotlin.Unit

# Top-level functions that can only be used by Kotlin.
-dontwarn retrofit2.KotlinExtensions
-dontwarn retrofit2.KotlinExtensions$*

# With R8 full mode, it sees no subtypes of Retrofit interfaces since they are created with a Proxy
# and replaces all potential values with null. Explicitly keeping the interfaces prevents this.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface <1>

# Keep inherited services.
-if interface * { @retrofit2.http.* <methods>; }
-keep,allowobfuscation interface * extends <1>

# With R8 full mode generic signatures are stripped for classes that are not
# kept. Suspend functions are wrapped in continuations where the type argument
# is used.
-keep,allowobfuscation,allowshrinking class kotlin.coroutines.Continuation

# R8 full mode strips generic signatures from return types if not kept.
-if interface * { @retrofit2.http.* public *** *(...); }
-keep,allowoptimization,allowshrinking,allowobfuscation class <3>

# With R8 full mode generic signatures are stripped for classes that are not kept.
-keep,allowobfuscation,allowshrinking class retrofit2.Response

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/5dd8c55633678d7c2ac4fc4b677f5f2f/transformed/rules/lib/META-INF/proguard/retrofit2.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/0695a1364fe591bcf16a6e869ad28802/transformed/rules/lib/META-INF/proguard/okhttp3.pro
# JSR 305 annotations are for embedding nullability information.
-dontwarn javax.annotation.**

# A resource is loaded with a relative path so the package of this class must be preserved.
-keepnames class okhttp3.internal.publicsuffix.PublicSuffixDatabase

# Animal Sniffer compileOnly dependency to ensure APIs are compatible with older versions of Java.
-dontwarn org.codehaus.mojo.animal_sniffer.*

# OkHttp platform used only on JVM and when Conscrypt and other security providers are available.
-dontwarn okhttp3.internal.platform.**
-dontwarn org.conscrypt.**
-dontwarn org.bouncycastle.**
-dontwarn org.openjsse.**

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/0695a1364fe591bcf16a6e869ad28802/transformed/rules/lib/META-INF/proguard/okhttp3.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/0672849a31ae21d8cb13297de444fe19/transformed/rules/lib/META-INF/proguard/datetime.pro
# We depend on kotlinx-serialization as compileOnly.
# If the serializers don't get used, the library works properly even without the
# kotlinx-serialization dependency, but Proguard emits warnings about datetime
# classes mentioning some serialization-related entities.
# These rules should not cause problems: if a project actually relies on
# serialization, then much more than just these two classes will be required,
# so telling Proguard not to worry if these two are missing will not prevent it
# from emitting errors for code that does use serialization but somehow forgot
# to depend on it.
-dontwarn kotlinx.serialization.KSerializer
-dontwarn kotlinx.serialization.Serializable

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/0672849a31ae21d8cb13297de444fe19/transformed/rules/lib/META-INF/proguard/datetime.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/9eafbaf943216ee1b84260d0bfcd8c47/transformed/rules/lib/META-INF/proguard/gson.pro
### Gson ProGuard and R8 rules which are relevant for all users
### This file is automatically recognized by ProGuard and R8, see https://developer.android.com/build/shrink-code#configuration-files
###
### IMPORTANT:
### - These rules are additive; don't include anything here which is not specific to Gson (such as completely
###   disabling obfuscation for all classes); the user would be unable to disable that then
### - These rules are not complete; users will most likely have to add additional rules for their specific
###   classes, for example to disable obfuscation for certain fields or to keep no-args constructors
###

# Keep generic signatures; needed for correct type resolution
-keepattributes Signature

# Keep Gson annotations
# Note: Cannot perform finer selection here to only cover Gson annotations, see also https://stackoverflow.com/q/47515093
-keepattributes RuntimeVisibleAnnotations,AnnotationDefault

### The following rules are needed for R8 in "full mode" which only adheres to `-keepattribtues` if
### the corresponding class or field is matches by a `-keep` rule as well, see
### https://r8.googlesource.com/r8/+/refs/heads/main/compatibility-faq.md#r8-full-mode

# Keep class TypeToken (respectively its generic signature) if present
-if class com.google.gson.reflect.TypeToken
-keep,allowobfuscation class com.google.gson.reflect.TypeToken

# Keep any (anonymous) classes extending TypeToken
-keep,allowobfuscation class * extends com.google.gson.reflect.TypeToken

# Keep classes with @JsonAdapter annotation
-keep,allowobfuscation,allowoptimization @com.google.gson.annotations.JsonAdapter class *

# Keep fields with any other Gson annotation
# Also allow obfuscation, assuming that users will additionally use @SerializedName or
# other means to preserve the field names
-keepclassmembers,allowobfuscation class * {
  @com.google.gson.annotations.Expose <fields>;
  @com.google.gson.annotations.JsonAdapter <fields>;
  @com.google.gson.annotations.Since <fields>;
  @com.google.gson.annotations.Until <fields>;
}

# Keep no-args constructor of classes which can be used with @JsonAdapter
# By default their no-args constructor is invoked to create an adapter instance
-keepclassmembers class * extends com.google.gson.TypeAdapter {
  <init>();
}
-keepclassmembers class * implements com.google.gson.TypeAdapterFactory {
  <init>();
}
-keepclassmembers class * implements com.google.gson.JsonSerializer {
  <init>();
}
-keepclassmembers class * implements com.google.gson.JsonDeserializer {
  <init>();
}

# Keep fields annotated with @SerializedName for classes which are referenced.
# If classes with fields annotated with @SerializedName have a no-args
# constructor keep that as well. Based on
# https://issuetracker.google.com/issues/150189783#comment11.
# See also https://github.com/google/gson/pull/2420#discussion_r1241813541
# for a more detailed explanation.
-if class *
-keepclasseswithmembers,allowobfuscation class <1> {
  @com.google.gson.annotations.SerializedName <fields>;
}
-if class * {
  @com.google.gson.annotations.SerializedName <fields>;
}
-keepclassmembers,allowobfuscation,allowoptimization class <1> {
  <init>();
}

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/9eafbaf943216ee1b84260d0bfcd8c47/transformed/rules/lib/META-INF/proguard/gson.pro
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/cff34de6b981d2bf39a558cf5cf9ed26/transformed/core-6.0.0/proguard.txt
# Add project specific ProGuard rules here.
# You can control the set of applied configuration files using the
# proguardFiles setting in build.gradle.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Uncomment this to preserve the line number information for
# debugging stack traces.
#-keepattributes SourceFile,LineNumberTable

# If you keep the line number information, uncomment this to
# hide the original source file name.
#-renamesourcefileattribute SourceFile

# Strip out debugging stuffs
-assumenosideeffects class com.topjohnwu.superuser.internal.Utils {
	public static void log(...);
	public static void ex(...);
	public static boolean vLog() return false;
	public static boolean hasStartupAgents(android.content.Context) return false;
}
-assumenosideeffects class android.os.Debug {
	public static boolean isDebuggerConnected() return false;
}

# Make sure R8/Proguard don't break things
-keep,allowobfuscation class * extends com.topjohnwu.superuser.Shell$Initializer { *; }
-keep,allowobfuscation class * extends com.topjohnwu.superuser.ipc.RootService { *; }

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/cff34de6b981d2bf39a558cf5cf9ed26/transformed/core-6.0.0/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/ce24831857229c5641ba63f2c097efcd/transformed/parcelablelist-2.0.1-release/proguard.txt

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/ce24831857229c5641ba63f2c097efcd/transformed/parcelablelist-2.0.1-release/proguard.txt
# The proguard configuration file for the following section is /home/runner/.gradle/caches/8.12.1/transforms/c6c50eeba734ef04f5017d67c02ed6ba/transformed/hiddenapibypass-4.3/proguard.txt
-dontwarn dalvik.system.VMRuntime
-keepclassmembers class org.lsposed.hiddenapibypass.Helper$* { *; }

# End of content from /home/runner/.gradle/caches/8.12.1/transforms/c6c50eeba734ef04f5017d67c02ed6ba/transformed/hiddenapibypass-4.3/proguard.txt
# The proguard configuration file for the following section is <unknown>

# End of content from <unknown>